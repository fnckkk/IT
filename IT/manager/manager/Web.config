<?xml version="1.0" encoding="utf-8"?>

<!--
  有关如何配置 ASP.NET 应用程序的详细消息，请访问
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>
  <!--配置EXT.NET这套控件集用的-->
  <!--添加全局配置，首先要在配置文件中添加自定义节点extnet-->
  <configSections>
    <section name="extnet" type="Ext.Net.GlobalConfig" requirePermission="false"/>
  </configSections>
  <!--配置项：密钥，js脚本呈现方式（Release表示压缩脚本），初始化脚本的方式，主题皮肤(Neptune,Default,Gray)-->
  <extnet licenseKey="NTcwMjk3NjQsMiw5OTk5LTEyLTMx" scriptMode="Release" initScriptMode="Inline" theme="Neptune"/>
  <system.web>
    <!--配置最大请求字节数，是否允许传输html标签-->
    <httpRuntime maxRequestLength="990000000" requestValidationMode="2.0"/>
    <!--指定使用的框架-->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
      </assemblies>
    </compilation>
    <!--在每次发出 HTTP 请求时，都会调 Ext.Net.DirectRequestModule 处理模块。该模块作为 ASP.NET 请求管道的一部分调用，
    在整个请求过程中访问生命周期事件。该模块使你可以检查传入和传出的请求并根据该请求进行操作。-->
    <httpModules>
      <add name="DirectRequestModule" type="Ext.Net.DirectRequestModule, Ext.Net"/>
    </httpModules>
    <!--任何包含 "*/ext.axd" （内嵌资源）的 HTTP 请求，都会调用 Ext.Net.ResourceHandler 处理程序。-->
    <httpHandlers>
      <add path="*/ext.axd" verb="*" type="Ext.Net.ResourceHandler" validate="false"/>
    </httpHandlers>
    <!--页面采用4.0版本的ASP.NET, 自动给标签元素生成ID。添加此配置为了在页面中使用ext这套控件-->
    <pages controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID">
      <controls>
        <add assembly="Ext.Net" namespace="Ext.Net" tagPrefix="ext"/>
      </controls>
    </pages>
  </system.web>
<!--引用WCF后生成的-->
  
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IService1" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          allowCookies="false" bypassProxyOnLocal="false" maxBufferPoolSize="524288"
          maxReceivedMessageSize="65536" useDefaultWebProxy="true" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:4876/Service1.svc" binding="basicHttpBinding"
        bindingConfiguration="BasicHttpBinding_IService1" contract="WCF.IService1"
        name="BasicHttpBinding_IService1" />
    </client>
  </system.serviceModel>
</configuration>
